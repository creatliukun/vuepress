import comp from "/Users/sh-mb-0018/my-blog/vuepress/docs/.vuepress/.temp/pages/posts/article12.html.vue"
const data = JSON.parse("{\"path\":\"/posts/article12.html\",\"title\":\"浏览器渲染过程详解\",\"lang\":\"zh-CN\",\"frontmatter\":{\"date\":\"2025-03-26T00:00:00.000Z\",\"category\":[\"浏览器\"],\"tag\":[\"渲染\"]},\"headers\":[{\"level\":2,\"title\":\"1. HTML 解析\",\"slug\":\"_1-html-解析\",\"link\":\"#_1-html-解析\",\"children\":[{\"level\":3,\"title\":\"1.1 初始阶段\",\"slug\":\"_1-1-初始阶段\",\"link\":\"#_1-1-初始阶段\",\"children\":[]},{\"level\":3,\"title\":\"1.2 标签解析\",\"slug\":\"_1-2-标签解析\",\"link\":\"#_1-2-标签解析\",\"children\":[]},{\"level\":3,\"title\":\"1.3 DOM 构建完成\",\"slug\":\"_1-3-dom-构建完成\",\"link\":\"#_1-3-dom-构建完成\",\"children\":[]}]},{\"level\":2,\"title\":\"2. CSS 解析\",\"slug\":\"_2-css-解析\",\"link\":\"#_2-css-解析\",\"children\":[{\"level\":3,\"title\":\"2.1 下载与解析\",\"slug\":\"_2-1-下载与解析\",\"link\":\"#_2-1-下载与解析\",\"children\":[]},{\"level\":3,\"title\":\"2.2 样式计算\",\"slug\":\"_2-2-样式计算\",\"link\":\"#_2-2-样式计算\",\"children\":[]}]},{\"level\":2,\"title\":\"3. 布局（Layout/Reflow）\",\"slug\":\"_3-布局-layout-reflow\",\"link\":\"#_3-布局-layout-reflow\",\"children\":[{\"level\":3,\"title\":\"3.1 布局计算\",\"slug\":\"_3-1-布局计算\",\"link\":\"#_3-1-布局计算\",\"children\":[]},{\"level\":3,\"title\":\"3.2 布局树\",\"slug\":\"_3-2-布局树\",\"link\":\"#_3-2-布局树\",\"children\":[]}]},{\"level\":2,\"title\":\"4. 绘制（Painting）\",\"slug\":\"_4-绘制-painting\",\"link\":\"#_4-绘制-painting\",\"children\":[{\"level\":3,\"title\":\"4.1 绘制准备\",\"slug\":\"_4-1-绘制准备\",\"link\":\"#_4-1-绘制准备\",\"children\":[]},{\"level\":3,\"title\":\"4.2 绘制顺序\",\"slug\":\"_4-2-绘制顺序\",\"link\":\"#_4-2-绘制顺序\",\"children\":[]}]},{\"level\":2,\"title\":\"5. 合成（Compositing）\",\"slug\":\"_5-合成-compositing\",\"link\":\"#_5-合成-compositing\",\"children\":[{\"level\":3,\"title\":\"5.1 图层合并\",\"slug\":\"_5-1-图层合并\",\"link\":\"#_5-1-图层合并\",\"children\":[]},{\"level\":3,\"title\":\"5.2 动画优化\",\"slug\":\"_5-2-动画优化\",\"link\":\"#_5-2-动画优化\",\"children\":[]}]},{\"level\":2,\"title\":\"6. JavaScript 执行\",\"slug\":\"_6-javascript-执行\",\"link\":\"#_6-javascript-执行\",\"children\":[{\"level\":3,\"title\":\"6.1 脚本执行\",\"slug\":\"_6-1-脚本执行\",\"link\":\"#_6-1-脚本执行\",\"children\":[]},{\"level\":3,\"title\":\"6.2 异步脚本\",\"slug\":\"_6-2-异步脚本\",\"link\":\"#_6-2-异步脚本\",\"children\":[]}]},{\"level\":2,\"title\":\"总结\",\"slug\":\"总结\",\"link\":\"#总结\",\"children\":[]}],\"git\":{\"updatedTime\":1742837421000,\"contributors\":[{\"name\":\"creatliukun\",\"username\":\"creatliukun\",\"email\":\"952476356@qq.com\",\"commits\":1,\"url\":\"https://github.com/creatliukun\"}],\"changelog\":[{\"hash\":\"8f6b5f26188e9b6457af9608ad766e2bf1e91574\",\"time\":1742837421000,\"email\":\"952476356@qq.com\",\"author\":\"creatliukun\",\"message\":\"feat: 文档书写\"}]},\"filePathRelative\":\"posts/article12.md\",\"excerpt\":\"\\n<p>浏览器的渲染过程是一个复杂且高度优化的过程，涉及 HTML、CSS 和 JavaScript 的解析与执行。以下是详细的步骤说明：</p>\\n<hr>\\n<h2>1. <strong>HTML 解析</strong></h2>\\n<h3>1.1 初始阶段</h3>\\n<ul>\\n<li>当浏览器接收到 HTML 文件时，会从上到下逐行解析。</li>\\n<li>解析过程中，HTML 被转换为一个 <strong>DOM（Document Object Model）树</strong>，这是页面结构的表示形式。</li>\\n</ul>\\n<h3>1.2 标签解析</h3>\\n<ul>\\n<li>浏览器遇到标签时，会根据标签类型进行不同的处理：\\n<ul>\\n<li><strong>普通标签</strong>：直接创建对应的 DOM 节点并插入到 DOM 树中。</li>\\n<li><strong>脚本标签 <code>&lt;script&gt;</code></strong>：\\n<ul>\\n<li>如果是内联脚本（<code>&lt;script&gt;...&lt;/script&gt;</code>），浏览器会暂停 HTML 解析，立即执行脚本。</li>\\n<li>如果是外部脚本（<code>&lt;script src=\\\"...\\\"&gt;&lt;/script&gt;</code>），浏览器会发起网络请求下载脚本文件，并在下载完成后执行。</li>\\n<li>默认情况下，脚本是阻塞的（blocking），即 HTML 解析会被暂停，直到脚本执行完成。</li>\\n</ul>\\n</li>\\n<li><strong>样式表 <code>&lt;link&gt;</code></strong>：\\n<ul>\\n<li>遇到 <code>&lt;link rel=\\\"stylesheet\\\"&gt;</code> 时，浏览器会发起 CSS 文件的下载请求。</li>\\n<li>CSS 是渲染阻塞的（render-blocking），即浏览器不会开始渲染页面，直到所有 CSS 文件加载完成。</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n</ul>\"}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
